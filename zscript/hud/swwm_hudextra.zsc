// additional hud things

// Press F to Pay Respects
Class PayRespects : HUDMessageBase
{
	Vector2 basepos;
	int lifespan, initialspan, starttic;
	double scale;
	Vector2 hs, ss;
	int seed, seed2;

	static PayRespects PressF()
	{
		let f = new("PayRespects");
		f.basepos = (FRandom[FInTheChat](0.,1.),FRandom[FInTheChat](1.02,1.05));
		f.scale = FRandom[FInTheChat](.5,2.);
		f.lifespan = f.initialspan = Random[FInTheChat](20,80);
		f.starttic = level.maptime;
		f.seed = Random[FInTheChat]();
		f.seed2 = Random[FInTheChat]();
		f.ScreenSizeChanged();
		return f;
	}

	override bool Tick()
	{
		lifespan--;
		return (lifespan<=0);
	}

	override void ScreenSizeChanged()
	{
		hs = StatusBar.GetHUDScale()*scale;
		hs.y = hs.x;
		ss = (Screen.GetWidth()/hs.x,Screen.GetHeight()/hs.y);
	}

	override void Draw( int bottom, int visibility )
	{
		Vector2 realpos = (basepos.x*ss.x,basepos.y*ss.y);
		Vector2 fo = (smallfont.StringWidth("F")/2.,-smallfont.GetHeight());
		// F rise up
		int initspd = (128-seed);
		if ( (initspd >= 0) && (initspd < 32) ) initspd = 32;
		if ( (initspd < 0) && (initspd > -32) ) initspd = -32;
		int boostup = 32+(seed2/4);
		double fractic = SWWMStatusBar(statusbar)?SWWMStatusBar(statusbar).fractic:0;
		fo.x += (.15*initspd)*((initialspan-(lifespan-fractic))**.6);
		fo.y += ((initialspan-(lifespan-fractic))**1.6)-boostup*sin((90./initialspan)*(level.maptime+fractic-starttic));
		double alph = clamp((lifespan+fractic)/double(initialspan),0.,1.);
		Screen.DrawText(smallfont,Font.CR_GREEN,realpos.x-fo.x,realpos.y-fo.y,"F",DTA_VirtualWidthF,ss.x,DTA_VirtualHeightF,ss.y,DTA_KeepRatio,true,DTA_Alpha,alph);
	}
}

// Screen flashes from DT
Class GenericFlash : HUDMessageBase
{
	Color col;
	int duration;
	double alpha;
	Actor cam;
	transient CVar flashstr;

	GenericFlash Setup( Actor camera, Color c, int d )
	{
		alpha = 1.0;
		col = c;
		duration = d;
		cam = camera;
		return self;
	}
	override bool Tick()
	{
		if ( duration > 0 ) alpha -= 1./duration;
		return (alpha<=0)||(!cam);
	}
	override void Draw( int bottom, int visibility )
	{
		if ( automapactive || (visibility != BaseStatusBar.HUDMSGLayer_UnderHUD) ) return;
		if ( cam && (players[consoleplayer].camera != cam) ) return;
		if ( !flashstr ) flashstr = CVar.FindCVar(SWWMMODPREFIX.."_flashstrength");
		Screen.Dim(col,(col.a/255.)*alpha*flashstr.GetFloat(),0,0,Screen.GetWidth(),Screen.GetHeight());
	}
}

Class QueuedFlash
{
	Color c;
	int duration;
	int tic;
	Actor cam;
}

// weapon tooltips
Class SWWMWeaponTooltip : HUDMessageBase
{
	TextureID icon;
	String wpn, txt;
	double tics, holdtics, fadeintics, fadeouttics;
	transient BrokenLines l;
	SWWMWeaponTooltip next;

	SWWMWeaponTooltip Init( Class<SWWMWeapon> weapon )
	{
		let def = GetDefaultByType(weapon);
		icon = def.Icon;
		wpn = def.GetTag();
		txt = StringTable.Localize(def.tooltip);
		holdtics = 120;
		fadeintics = 5;
		fadeouttics = 15;
		tics = -10;
		return self;
	}

	override bool Tick()
	{
		bool clearme = (++tics > holdtics+fadeintics+fadeouttics);
		if ( clearme && next ) StatusBar.AttachMessage(next,-2910);
		return clearme;
	}

	override void Draw( int bottom, int visibility )
	{
		if ( tics <= 0 ) return;
		Vector2 hs = StatusBar.GetHUDScale();
		hs.y = hs.x;
		Vector2 ss = (Screen.GetWidth()/hs.x,Screen.GetHeight()/hs.y);
		double alpha = (tics<fadeintics)?(tics/fadeintics):(tics<(fadeintics+holdtics))?1.:(1.-(tics-(fadeintics+holdtics))/fadeouttics);
		int w, h;
		[w, h] = TexMan.GetSize(icon);
		int w2 = w;
		Vector2 pos = (int(ss.x/2),int(ss.y/2)+h/2);
		w = smallfont.StringWidth(wpn);
		if ( !l ) l = smallfont2.BreakLines(txt,600);
		int w1 = w;
		w = 0;
		for ( int i=0; i<l.Count(); i++ )
		{
			let lw = smallfont2.StringWidth(l.StringAt(i));
			if ( lw > w ) w = lw;
		}
		int cw = int(ceil((max(max(w1,w2),w)+8)/6.))*6;
		Screen.Dim("Black",.5*alpha,int((pos.x-(cw+4)/2)*hs.x),int((pos.y-(h+6))*hs.y),int((cw+4)*hs.x),int((8+h+4+smallfont.GetHeight()+8+smallfont2.GetHeight()*l.Count())*hs.y));
		Screen.DrawTexture(icon,false,pos.x,pos.y,DTA_VirtualWidthF,ss.x,DTA_VirtualHeightF,ss.y,DTA_KeepRatio,true,DTA_Alpha,alpha,DTA_CenterBottomOffset,true);
		pos.y += 4;
		Screen.DrawText(smallfont,Font.CR_FIRE,pos.x-w1/2,pos.y,wpn,DTA_VirtualWidthF,ss.x,DTA_VirtualHeightF,ss.y,DTA_KeepRatio,true,DTA_Alpha,alpha);
		for ( int i=0; i<cw; i+=6 )
			Screen.DrawChar(smallfont,Font.CR_FIRE,(pos.x-cw/2)+i,pos.y+6,0x5F,DTA_VirtualWidthF,ss.x,DTA_VirtualHeightF,ss.y,DTA_KeepRatio,true,DTA_Alpha,alpha);
		pos.y += smallfont.GetHeight()+8;
		for ( int i=0; i<l.Count(); i++ )
		{
			Screen.DrawText(smallfont2,Font.CR_WHITE,pos.x-w/2,pos.y,l.StringAt(i),DTA_VirtualWidthF,ss.x,DTA_VirtualHeightF,ss.y,DTA_KeepRatio,true,DTA_Alpha,alpha);
			pos.y += smallfont2.GetHeight();
		}
	}
}
